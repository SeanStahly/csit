#lang racket
(display "1. ")(newline)
(define (reverse-digits n)
  (define (reverse in out )
    (if (= in 0)
        out
        (reverse (floor (/ in 10)) (+ (* out 10) (modulo in 10)))
        )
    )
  (reverse n 0))
(display "Testing reverse-digits 456 ")(reverse-digits 456)
(display "Testing reverse-digits 123456789123456 ")(reverse-digits 123456789123456)
(display "Testing reverse-digits 397164 ")(reverse-digits 397164)

(define (same-digits? a b)
  (define (adjust in out)
    (if (= in 0)
        out
        (adjust (floor (/ in 10))(+ out (* 1 (expt 100 (modulo in 10)))))))
  (if (= (adjust a 0) (adjust b 0))
         #t
         #f))

(display "Testing same-digits 445, 544 ")(same-digits? 445 544)
(display "Testing same-digits 133042, 420313 ")(same-digits? 133042 420313)
(display "Testing same-digits 133043, 42013 ")(same-digits? 133042 42013)

(newline)(display "2.")(newline)
(define (pseudorandomizer prev digits)
  (floor (/ (floor (modulo (expt prev 2) (expt 10 (+ (floor (/ digits 2)) digits))) ) (expt 10 (ceiling (/ digits 2) )))))
(display "Testing pseudorandomizer 64 2 ")(pseudorandomizer 64 2)
(display "Testing pseudorandomizer 5772156649 10 ")(pseudorandomizer 5772156649 10)
(display "Testing pseudorandomizer 123 3 ")(pseudorandomizer 123 3)
(display "Possible problems occur when the returned value starts with a 0 (64 2 should return 09) and when you need to extract an odd number of numbers there is no middle to return (123^2 is 15129, which could return 51 or 12 and be correct)")

(newline)(newline)(display "3.")(newline)
(define (mersenne? n predicate)
  (if (predicate n)
      (if (predicate (-(expt 2 n) 1))
          #t
          #f)
      #f))
(define (smallest-divisor n)
  (find-divisor n 2))
(define (find-divisor n test-divisor)
  (cond ((> (expt test-divisor 2) n) n)
        ((divides? test-divisor n) test-divisor)
        (else (find-divisor n (+ test-divisor 1)))))
(define (divides? a b)
  (= (remainder b a) 0))
(define (prime? n)
  (= n (smallest-divisor n)))

(display "Test mersenne? 2 ")(mersenne? 2 prime?)
(display "Test mersenne? 3 ")(mersenne? 3 prime?)
(display "Test mersenne? 4 ")(mersenne? 4 prime?)
(display "Test mersenne? 5 ")(mersenne? 5 prime?)
(display "Test mersenne? 17 ")(mersenne? 17 prime?)
(display "Test mersenne? 20 ")(mersenne? 20 prime?)